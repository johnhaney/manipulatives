#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["GridMaterial", "Manipulatives"]
    def "GridMaterial" (
        active = true
        references = @Materials/GridMaterial.usda@
    )
    {
        float3 xformOp:scale = (1, 1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "Manipulatives" (
        active = true
    )
    {
        float3 xformOp:translate = (0, 1, -0.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Cube "Cube" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube/DefaultMaterial>
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Manipulatives/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 0.0026862954, 0.5893745) (
                        colorSpace = "srgb_displayp3"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def Cube "Cube_1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0.25, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_2" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (40, 40)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0.5, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_3" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (60, 60)
            int ui:nodegraph:node:stackingOrder = 3
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-0.25, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_4" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (80, 80)
            int ui:nodegraph:node:stackingOrder = 4
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-0.5, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_5" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (60, 60)
            int ui:nodegraph:node:stackingOrder = 3
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0.75, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_6" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (80, 80)
            int ui:nodegraph:node:stackingOrder = 4
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (1, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_7" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (100, 100)
            int ui:nodegraph:node:stackingOrder = 5
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-0.75, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_8" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (120, 120)
            int ui:nodegraph:node:stackingOrder = 6
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-1, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_9" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube_9/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (10, 1, 1)
            float3 xformOp:translate = (0, 0, -0.25)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Manipulatives/Cube_9/DefaultMaterial/DefaultSurfaceShader.outputs:surface>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0.9981088, 1, 0) (
                        colorSpace = "srgb_displayp3"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }

        def Cube "Cube_10" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube_9/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (40, 40)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (10, 1, 1)
            float3 xformOp:translate = (0, 0, -0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_11" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube_9/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (60, 60)
            int ui:nodegraph:node:stackingOrder = 3
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (10, 1, 1)
            float3 xformOp:translate = (0, 0, -0.75)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_12" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube_9/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (80, 80)
            int ui:nodegraph:node:stackingOrder = 4
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (10, 1, 1)
            float3 xformOp:translate = (0, 0, -1)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_13" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube_9/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (100, 100)
            int ui:nodegraph:node:stackingOrder = 5
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (10, 1, 1)
            float3 xformOp:translate = (0, 0, -1.25)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_14" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube_9/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (120, 120)
            int ui:nodegraph:node:stackingOrder = 6
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (10, 1, 1)
            float3 xformOp:translate = (0, 0, -1.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_15" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube_9/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (140, 140)
            int ui:nodegraph:node:stackingOrder = 7
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (10, 1, 1)
            float3 xformOp:translate = (0, 0, -1.75)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_16" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube_9/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (160, 160)
            int ui:nodegraph:node:stackingOrder = 8
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (10, 1, 1)
            float3 xformOp:translate = (0, 0, -2)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_17" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube_9/DefaultMaterial> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.2
            float2 ui:nodegraph:node:pos = (180, 180)
            int ui:nodegraph:node:stackingOrder = 9
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (10, 1, 1)
            float3 xformOp:translate = (0, 0, -2.25)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cube "Cube_18" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Manipulatives/Cube_18/DefaultMaterial>
            double size = 0.2
            float2 ui:nodegraph:node:pos = (200, 200)
            int ui:nodegraph:node:stackingOrder = 10
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (10, 10, 1)
            float3 xformOp:translate = (0, 0.9, -2.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Manipulatives/Cube_18/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0, 0.45954075, 1) (
                        colorSpace = "srgb_displayp3"
                    )
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }
        }
    }
}

